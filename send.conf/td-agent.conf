<source>
  type tcp
  format dev_null
  port 13337
  tag access.log.tcp
  @label @ltsv
</source>

<source>
  type tail
  path /log/access.log
  pos_file /log/none.access.log.pos
  tag access.log.i-12345678
  format none
  @label @none
</source>

<source>
  @label @ltsv
  type tail
  path /log/access.log
  pos_file /log/ltsv.access.log.pos
  tag access.log.i-12345678
  format ltsv
  time_format %Y-%m-%dT%H:%M:%S.%LZ
  time_key time
  types status:integer,size:integer
</source>

<source>
  @label @ltsv
  type tail
  path /var/log/nginx/access.log
  pos_file /log/nginx.access.log.pos
  tag access.log.nginx.i-12345678
  #format nginx  ## This doesn't work :-(
  format /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" "(?<forwarder>[^\"]*)")?/
  time_format %d/%b/%Y:%H:%M:%S %z
  types code:integer,size:integer
</source>

<label @none>
  <match access.log.**>
    type file
    path /log/none.access.log
  </match>
</label>

<label @ltsv>
  <match access.log.**>
    type copy

    <store>
      type rewrite_tag_filter
      rewriterule1 status ^([0-9]+)$ $1.${tag}
    </store>

    <store>
      type forward
  
      buffer_type file
      buffer_path /log/access.log.foward.buffer
      buffer_chunk_limit  16kb   # size of chunk
      buffer_queue_limit  3      # discard data if queue is full
      flush_interval 1s
  
      <server>
        name myserver1
        host recv
        port 24224
      </server>
    </store>
  </match>
</label>

<filter 500.access.log.**>
  type record_transformer
  enable_ruby
  <record>
    hostname "#{Socket.gethostname}"
  </record>
  <record>
    time ${time}
  </record>
  <record>
    duration ${Time.now.to_i - time.to_i}
  </record>
  <record>
    status1 ${status.to_i/100}
  </record>
</filter>

<match 500.access.log.**>
  type stdout
</match>
